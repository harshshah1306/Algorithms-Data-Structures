/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    List<Integer> ans=new ArrayList<>();
    public List<Integer> postorderTraversal(TreeNode root) {
        if(root==null)
        {
            return ans;
        }
        Stack<TreeNode> stack=new Stack<>();
        stack.push(root);
        while(stack.size()>0)
        {
            TreeNode item=stack.pop();
            ans.add(item.val);
            if(item.left!=null)
            {
                stack.push(item.left);
            }
            if(item.right!=null)
            {
                stack.push(item.right);
            }
        }
       Collections.reverse(ans);
       return ans;
    }
}

//Note it is the same as preorder, just reverse at the end:
