/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        Scanner sc=new Scanner(System.in);
        ListNode fast=head,slow=head;
        boolean iscycle=false;
        int count=0;
        while(fast!=null && fast.next!=null)
        {
            slow=slow.next;
            count++;
            fast=fast.next.next;
            if(slow==fast)
            {
                iscycle=true;
                break;
            }
        }
        if(!iscycle)
        {
            return null;
        }
        if(iscycle)
        {
            slow=head;
            while(slow!=fast)
            {
                slow=slow.next;
                fast=fast.next;
            }
        }
        return fast;
    }
}
